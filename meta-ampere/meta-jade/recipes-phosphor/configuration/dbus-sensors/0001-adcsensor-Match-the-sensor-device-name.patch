From a8149ac40374fc9830b290c33b918f36fe3d970f Mon Sep 17 00:00:00 2001
From: ThuBaNguyen <thu@os.amperecomputing.com>
Date: Tue, 28 Sep 2021 07:41:26 +0000
Subject: [PATCH 1/8] adcsensor: Match the sensor device name

Currently, ADCSensor daemon only accesses the sensor paths in
/sys/devices/platform/iio-hwmon or their device name is iio-hwmon. So
the daemon created the sensor path filter by comparing the output name
of /sys/class/hwmon/hwmon*/name with "iio_hwmon" string. But the linux
kernel doesn't limit the number of ADC devices by one. Such as AST2600
has two ADC devices. So the sensor paths are not only in
/sys/devices/platform/iio-hwmon but also in other paths such as
/sys/devices/platform/iio-hwmon-*. That why, the filter should not
exist.

Moreover, when there are some ADC devices, the sensor index of
different ADC devices can be dupplicated. So only matching the sensor
path index with the "Index" value in sensor configuration as the
current design is not enough. Therefore, ADCSensor daemon should add
more matching conditions. The device name in the device path can be
used as the addition checking.

This commit will remove the sensor path filter and supports using the
device name as the addition matching beside the sensor path index.
Because the current ADC sensor configurations do not have the device
name setting, the default name "iio-hwmon" will be used for backward
compatible. The "DevName" option will be add later in sensor
configuration file to support setting device name.

Below is an example of two sensor paths of two different devices with
the same index:
$readlink -f /sys/class/hwmon/hwmon11/in1_input
/sys/devices/platform/iio-hwmon/hwmon/hwmon11/in1_input
$readlink -f /sys/class/hwmon/hwmon10/in1_input
/sys/devices/platform/iio-hwmon-battery/hwmon/hwmon10/in1_input

Tested:
    1. Configures ADC sensors as below:
        { "Index": 0, "Name": "S0_0V8_VDDC_SOC", "Type": "ADC" }
    2. The configured sensor should be matched with the sensor path
        /sys/devices/platform/iio-hwmon/hwmon/hwmon11/in1_input.

Signed-off-by: ThuBaNguyen <thu@os.amperecomputing.com>
---
 src/ADCSensorMain.cpp | 41 +++++++++++++++++++----------------------
 1 file changed, 19 insertions(+), 22 deletions(-)

diff --git a/src/ADCSensorMain.cpp b/src/ADCSensorMain.cpp
index 9311834..8eb4cb9 100644
--- a/src/ADCSensorMain.cpp
+++ b/src/ADCSensorMain.cpp
@@ -40,30 +40,13 @@ static constexpr float gpioBridgeSetupTimeDefault = 0.02;
 
 namespace fs = std::filesystem;
 
+static std::string defaultADCName = "iio-hwmon";
 static constexpr std::array<const char*, 1> sensorTypes = {
     "xyz.openbmc_project.Configuration.ADC"};
 static std::regex inputRegex(R"(in(\d+)_input)");
 
 static boost::container::flat_map<size_t, bool> cpuPresence;
 
-// filter out adc from any other voltage sensor
-bool isAdc(const fs::path& parentPath)
-{
-    fs::path namePath = parentPath / "name";
-
-    std::ifstream nameFile(namePath);
-    if (!nameFile.good())
-    {
-        std::cerr << "Failure reading " << namePath.string() << "\n";
-        return false;
-    }
-
-    std::string name;
-    std::getline(nameFile, name);
-
-    return name == "iio_hwmon";
-}
-
 void createSensors(
     boost::asio::io_service& io, sdbusplus::asio::object_server& objectServer,
     boost::container::flat_map<std::string, std::shared_ptr<ADCSensor>>&
@@ -89,10 +72,6 @@ void createSensors(
             // configuration
             for (auto& path : paths)
             {
-                if (!isAdc(path.parent_path()))
-                {
-                    continue;
-                }
                 std::smatch match;
                 std::string pathStr = path.string();
 
@@ -103,6 +82,14 @@ void createSensors(
                 // convert to 0 based
                 size_t index = std::stoul(indexStr) - 1;
 
+                fs::path device = path.parent_path() / "device";
+                std::string deviceName = fs::canonical(device).stem();
+                /* The ADC device name should follow the format iio-hwmon-* */
+                if (deviceName.find(defaultADCName) != 0)
+                {
+                    continue;
+                }
+
                 const SensorData* sensorData = nullptr;
                 const std::string* interfacePath = nullptr;
                 const std::pair<
@@ -129,6 +116,16 @@ void createSensors(
                     {
                         continue;
                     }
+
+                    /*
+                     * Match device name with default name iio-hwmon
+                     * for backward compatible
+                     */
+                    if (defaultADCName != deviceName)
+                    {
+                        continue;
+                    }
+
                     auto findIndex = baseConfiguration->second.find("Index");
                     if (findIndex == baseConfiguration->second.end())
                     {
-- 
2.25.1

