From 8d65cf90014342187ceb41dea78c5b9de234ddee Mon Sep 17 00:00:00 2001
From: ThuBaNguyen <thu@os.amperecomputing.com>
Date: Tue, 28 Sep 2021 07:42:13 +0000
Subject: [PATCH 2/8] adcsensor: Add support DevName option

When there are many ADC devices, the sensor index of different ADC
devices can be dupplicated. So only matching the sensor path index
with the "Index" value in sensor configuration as the current design
is not enough. Therefore, ADCSensor daemon should add more matching
conditions. The device name in the device path can be used as the
addition checking.

The "DevName" option is added in entity-manager sensor configuration
file to set the expected device name of one sensor. This setting
DevName will be match with device name of the sensor path in dbus
sensor. The default name "iio-hwmon" will be applied for the non
DevName option sensors for backward compatible.

This commit adds support the "DevName" option in ADCSensor source. The
code will parse "DevName" options then matching the configured name
with the device name of the sensor paths.

Tested:
    1. There are two sensor paths:
    # readlink -f /sys/class/hwmon/hwmon11/in1_input
    /sys/devices/platform/iio-hwmon/hwmon/hwmon11/in1_input
    # readlink -f /sys/class/hwmon/hwmon10/in1_input
    /sys/devices/platform/iio-hwmon-battery/hwmon/hwmon10/in1_input

    2. Add two ADC sensor configurations:
    { "Index": 0, "Name": "VBAT_RTC", "DevName":"iio-hwmon-battery",
    "Type": "ADC" },
    { "Index": 0, "Name": "S0_0V75_PCP", "Type": "ADC" }

    3. The sensor configurations should be matched as:
    + VBAT_RTC with ../iio-hwmon-battery/hwmon/hwmon10/in1_input
    + S0_0V75_PCP with ../iio-hwmon/hwmon/hwmon11/in1_input

Signed-off-by: ThuBaNguyen <thu@os.amperecomputing.com>
---
 src/ADCSensorMain.cpp | 15 ++++++++++++---
 1 file changed, 12 insertions(+), 3 deletions(-)

diff --git a/src/ADCSensorMain.cpp b/src/ADCSensorMain.cpp
index 8eb4cb9..1789d47 100644
--- a/src/ADCSensorMain.cpp
+++ b/src/ADCSensorMain.cpp
@@ -117,11 +117,22 @@ void createSensors(
                         continue;
                     }
 
+                    auto findDevName =
+                        baseConfiguration->second.find("DevName");
+                    if (findDevName != baseConfiguration->second.end())
+                    {
+                        const std::string& sName =
+                            std::get<std::string>(findDevName->second);
+                        if (sName != deviceName)
+                        {
+                            continue;
+                        }
+                    }
                     /*
                      * Match device name with default name iio-hwmon
                      * for backward compatible
                      */
-                    if (defaultADCName != deviceName)
+                    else if (defaultADCName != deviceName)
                     {
                         continue;
                     }
@@ -148,8 +159,6 @@ void createSensors(
                 }
                 if (sensorData == nullptr)
                 {
-                    std::cerr << "failed to find match for " << path.string()
-                              << "\n";
                     continue;
                 }
 
-- 
2.25.1

