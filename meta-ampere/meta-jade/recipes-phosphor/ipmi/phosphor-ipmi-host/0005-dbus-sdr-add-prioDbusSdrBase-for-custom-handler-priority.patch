From 920e1c185ffb64a9aeaa40eac88583cbf2010d86 Mon Sep 17 00:00:00 2001
From: Willy Tu <wltu@google.com>
Date: Thu, 12 Aug 2021 14:33:40 -0700
Subject: [PATCH] dbus-sdr: add prioDbusSdrBase for custom handler priority

prioDbusSdrBase is set to be 11 that will only take over
prioOpenBmcBase.

The sensorcommand/storagecommand handlers should take priority over
the handlers in sensorhandler/storagehander if it is enabled by dynamic
sensors.

Change-Id: I6e9cffacfac4127d2307e8c5e548c84323742c94
Signed-off-by: Willy Tu <wltu@google.com>
---

diff --git a/dbus-sdr/sensorcommands.cpp b/dbus-sdr/sensorcommands.cpp
index a2a5b65..cd6014d 100644
--- a/dbus-sdr/sensorcommands.cpp
+++ b/dbus-sdr/sensorcommands.cpp
@@ -2221,40 +2221,40 @@
 void registerSensorFunctions()
 {
     // <Platform Event>
-    ipmi::registerHandler(ipmi::prioOpenBmcBase, ipmi::netFnSensor,
+    ipmi::registerHandler(ipmi::prioDbusSdrBase, ipmi::netFnSensor,
                           ipmi::sensor_event::cmdPlatformEvent,
                           ipmi::Privilege::Operator, ipmiSenPlatformEvent);
 
 #ifdef FEATURE_DYNAMIC_SENSORS_WRITE
     // <Set Sensor Reading and Event Status>
-    ipmi::registerHandler(ipmi::prioOpenBmcBase, ipmi::netFnSensor,
+    ipmi::registerHandler(ipmi::prioDbusSdrBase, ipmi::netFnSensor,
                           ipmi::sensor_event::cmdSetSensorReadingAndEvtSts,
                           ipmi::Privilege::Operator, ipmiSetSensorReading);
 #endif
 
     // <Get Sensor Reading>
-    ipmi::registerHandler(ipmi::prioOpenBmcBase, ipmi::netFnSensor,
+    ipmi::registerHandler(ipmi::prioDbusSdrBase, ipmi::netFnSensor,
                           ipmi::sensor_event::cmdGetSensorReading,
                           ipmi::Privilege::User, ipmiSenGetSensorReading);
 
     // <Get Sensor Threshold>
-    ipmi::registerHandler(ipmi::prioOpenBmcBase, ipmi::netFnSensor,
+    ipmi::registerHandler(ipmi::prioDbusSdrBase, ipmi::netFnSensor,
                           ipmi::sensor_event::cmdGetSensorThreshold,
                           ipmi::Privilege::User, ipmiSenGetSensorThresholds);
 
     // <Set Sensor Threshold>
-    ipmi::registerHandler(ipmi::prioOpenBmcBase, ipmi::netFnSensor,
+    ipmi::registerHandler(ipmi::prioDbusSdrBase, ipmi::netFnSensor,
                           ipmi::sensor_event::cmdSetSensorThreshold,
                           ipmi::Privilege::Operator,
                           ipmiSenSetSensorThresholds);
 
     // <Get Sensor Event Enable>
-    ipmi::registerHandler(ipmi::prioOpenBmcBase, ipmi::netFnSensor,
+    ipmi::registerHandler(ipmi::prioDbusSdrBase, ipmi::netFnSensor,
                           ipmi::sensor_event::cmdGetSensorEventEnable,
                           ipmi::Privilege::User, ipmiSenGetSensorEventEnable);
 
     // <Get Sensor Event Status>
-    ipmi::registerHandler(ipmi::prioOpenBmcBase, ipmi::netFnSensor,
+    ipmi::registerHandler(ipmi::prioDbusSdrBase, ipmi::netFnSensor,
                           ipmi::sensor_event::cmdGetSensorEventStatus,
                           ipmi::Privilege::User, ipmiSenGetSensorEventStatus);
 
@@ -2262,37 +2262,37 @@
     // versions
 
     // <Get SDR Repository Info>
-    ipmi::registerHandler(ipmi::prioOpenBmcBase, ipmi::netFnStorage,
+    ipmi::registerHandler(ipmi::prioDbusSdrBase, ipmi::netFnStorage,
                           ipmi::storage::cmdGetSdrRepositoryInfo,
                           ipmi::Privilege::User,
                           ipmiStorageGetSDRRepositoryInfo);
 
     // <Get Device SDR Info>
-    ipmi::registerHandler(ipmi::prioOpenBmcBase, ipmi::netFnSensor,
+    ipmi::registerHandler(ipmi::prioDbusSdrBase, ipmi::netFnSensor,
                           ipmi::sensor_event::cmdGetDeviceSdrInfo,
                           ipmi::Privilege::User, ipmiSensorGetDeviceSdrInfo);
 
     // <Get SDR Allocation Info>
-    ipmi::registerHandler(ipmi::prioOpenBmcBase, ipmi::netFnStorage,
+    ipmi::registerHandler(ipmi::prioDbusSdrBase, ipmi::netFnStorage,
                           ipmi::storage::cmdGetSdrRepositoryAllocInfo,
                           ipmi::Privilege::User,
                           ipmiStorageGetSDRAllocationInfo);
 
     // <Reserve SDR Repo>
-    ipmi::registerHandler(ipmi::prioOpenBmcBase, ipmi::netFnSensor,
+    ipmi::registerHandler(ipmi::prioDbusSdrBase, ipmi::netFnSensor,
                           ipmi::sensor_event::cmdReserveDeviceSdrRepository,
                           ipmi::Privilege::User, ipmiStorageReserveSDR);
 
-    ipmi::registerHandler(ipmi::prioOpenBmcBase, ipmi::netFnStorage,
+    ipmi::registerHandler(ipmi::prioDbusSdrBase, ipmi::netFnStorage,
                           ipmi::storage::cmdReserveSdrRepository,
                           ipmi::Privilege::User, ipmiStorageReserveSDR);
 
     // <Get Sdr>
-    ipmi::registerHandler(ipmi::prioOpenBmcBase, ipmi::netFnSensor,
+    ipmi::registerHandler(ipmi::prioDbusSdrBase, ipmi::netFnSensor,
                           ipmi::sensor_event::cmdGetDeviceSdr,
                           ipmi::Privilege::User, ipmiStorageGetSDR);
 
-    ipmi::registerHandler(ipmi::prioOpenBmcBase, ipmi::netFnStorage,
+    ipmi::registerHandler(ipmi::prioDbusSdrBase, ipmi::netFnStorage,
                           ipmi::storage::cmdGetSdr, ipmi::Privilege::User,
                           ipmiStorageGetSDR);
 }
diff --git a/dbus-sdr/storagecommands.cpp b/dbus-sdr/storagecommands.cpp
index 5926615..1cdd784 100644
--- a/dbus-sdr/storagecommands.cpp
+++ b/dbus-sdr/storagecommands.cpp
@@ -1246,46 +1246,46 @@
     startMatch();
 
     // <Get FRU Inventory Area Info>
-    ipmi::registerHandler(ipmi::prioOemBase, ipmi::netFnStorage,
+    ipmi::registerHandler(ipmi::prioDbusSdrBase, ipmi::netFnStorage,
                           ipmi::storage::cmdGetFruInventoryAreaInfo,
                           ipmi::Privilege::User, ipmiStorageGetFruInvAreaInfo);
     // <READ FRU Data>
-    ipmi::registerHandler(ipmi::prioOpenBmcBase, ipmi::netFnStorage,
+    ipmi::registerHandler(ipmi::prioDbusSdrBase, ipmi::netFnStorage,
                           ipmi::storage::cmdReadFruData, ipmi::Privilege::User,
                           ipmiStorageReadFruData);
 
     // <WRITE FRU Data>
-    ipmi::registerHandler(ipmi::prioOpenBmcBase, ipmi::netFnStorage,
+    ipmi::registerHandler(ipmi::prioDbusSdrBase, ipmi::netFnStorage,
                           ipmi::storage::cmdWriteFruData,
                           ipmi::Privilege::Operator, ipmiStorageWriteFruData);
 
     // <Get SEL Info>
-    ipmi::registerHandler(ipmi::prioOpenBmcBase, ipmi::netFnStorage,
+    ipmi::registerHandler(ipmi::prioDbusSdrBase, ipmi::netFnStorage,
                           ipmi::storage::cmdGetSelInfo, ipmi::Privilege::User,
                           ipmiStorageGetSELInfo);
 
     // <Get SEL Entry>
-    ipmi::registerHandler(ipmi::prioOpenBmcBase, ipmi::netFnStorage,
+    ipmi::registerHandler(ipmi::prioDbusSdrBase, ipmi::netFnStorage,
                           ipmi::storage::cmdGetSelEntry, ipmi::Privilege::User,
                           ipmiStorageGetSELEntry);
 
     // <Add SEL Entry>
-    ipmi::registerHandler(ipmi::prioOpenBmcBase, ipmi::netFnStorage,
+    ipmi::registerHandler(ipmi::prioDbusSdrBase, ipmi::netFnStorage,
                           ipmi::storage::cmdAddSelEntry,
                           ipmi::Privilege::Operator, ipmiStorageAddSELEntry);
 
     // <Clear SEL>
-    ipmi::registerHandler(ipmi::prioOpenBmcBase, ipmi::netFnStorage,
+    ipmi::registerHandler(ipmi::prioDbusSdrBase, ipmi::netFnStorage,
                           ipmi::storage::cmdClearSel, ipmi::Privilege::Operator,
                           ipmiStorageClearSEL);
 
     // <Get SEL Time>
-    ipmi::registerHandler(ipmi::prioOpenBmcBase, ipmi::netFnStorage,
+    ipmi::registerHandler(ipmi::prioDbusSdrBase, ipmi::netFnStorage,
                           ipmi::storage::cmdGetSelTime, ipmi::Privilege::User,
                           ipmiStorageGetSELTime);
 
     // <Set SEL Time>
-    ipmi::registerHandler(ipmi::prioOpenBmcBase, ipmi::netFnStorage,
+    ipmi::registerHandler(ipmi::prioDbusSdrBase, ipmi::netFnStorage,
                           ipmi::storage::cmdSetSelTime,
                           ipmi::Privilege::Operator, ipmiStorageSetSELTime);
 }
diff --git a/include/ipmid/api-types.hpp b/include/ipmid/api-types.hpp
index 518db03..61d9218 100644
--- a/include/ipmid/api-types.hpp
+++ b/include/ipmid/api-types.hpp
@@ -39,6 +39,7 @@
  * is being created at.
  */
 constexpr int prioOpenBmcBase = 10;
+constexpr int prioDbusSdrBase = 11;
 constexpr int prioOemBase = 20;
 constexpr int prioOdmBase = 30;
 constexpr int prioCustomBase = 40;
