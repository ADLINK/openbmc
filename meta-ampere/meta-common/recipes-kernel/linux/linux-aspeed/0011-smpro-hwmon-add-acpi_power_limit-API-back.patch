From caea67fe65ff141b79d4f8497e1b3dc05033d51a Mon Sep 17 00:00:00 2001
From: Thu B Nguyen <tbnguyen@amperecomputing.com>
Date: Mon, 30 Nov 2020 12:44:55 +0700
Subject: [PATCH] smpro:hwmon add acpi_power_limit API back

The acpi_power_limit API is required by power limit feature in openBmc.
This APIs is accidentally removed in previous commits.
This commit adds it back.

Testing:
	1. ls /sys/class/hwmon/hwmon7
	2. The acpi_power_limit API should be in the API list.

Signed-off-by: Thu B Nguyen <tbnguyen@amperecomputing.com>
---
 drivers/hwmon/smpro-hwmon.c | 38 +++++++++++++++++++++++++++++++++++++
 1 file changed, 38 insertions(+)

diff --git a/drivers/hwmon/smpro-hwmon.c b/drivers/hwmon/smpro-hwmon.c
index 5c56143caa06..a0196a4a03cd 100644
--- a/drivers/hwmon/smpro-hwmon.c
+++ b/drivers/hwmon/smpro-hwmon.c
@@ -818,6 +818,22 @@ static int smpro_read_power(struct device *dev, u32 attr, int channel,
 	}
 }
 
+static ssize_t smpro_read_register(struct device *dev,
+			  struct device_attribute *da, char *buf)
+{
+	struct sensor_device_attribute *attr = to_sensor_dev_attr(da);
+	struct smpro_data *data = dev_get_drvdata(dev);
+	struct i2c_client *client = data->client;
+	s32 ret;
+
+	ret = i2c_smbus_read_word_swapped(client, attr->index);
+
+	if (ret < 0)
+		return ret;
+
+	return snprintf(buf, PAGE_SIZE, "%d\n", ret);
+}
+
 static int smpro_read(struct device *dev, enum hwmon_sensor_types type,
 		      u32 attr, int channel, long *val)
 {
@@ -835,6 +851,25 @@ static int smpro_read(struct device *dev, enum hwmon_sensor_types type,
 	}
 }
 
+static ssize_t smpro_write_register(struct device *dev,
+			   struct device_attribute *da,
+			   const char *buf, size_t count)
+{
+	struct sensor_device_attribute *attr = to_sensor_dev_attr(da);
+	struct smpro_data *data = dev_get_drvdata(dev);
+	struct i2c_client *client = data->client;
+	unsigned long val;
+	s32 ret;
+
+	ret = kstrtoul(buf, 16, &val);
+
+	ret = i2c_smbus_write_word_swapped(client, attr->index, val);
+	if (ret < 0)
+		return -EPROTO;
+
+	return count;
+}
+
 static int smpro_write(struct device *dev, enum hwmon_sensor_types type,
 		       u32 attr, int channel, long val)
 {
@@ -1083,6 +1118,8 @@ static SENSOR_DEVICE_ATTR(errors_smpro, 0444, smpro_internal_err_read, NULL,
 			RAS_SMPRO_ERRS);
 static SENSOR_DEVICE_ATTR(errors_pmpro, 0444, smpro_internal_err_read, NULL,
 			RAS_PMPRO_ERRS);
+static SENSOR_DEVICE_ATTR(acpi_power_limit, 0644, smpro_read_register,
+			smpro_write_register, ACPI_POWER_LIMIT_REG);
 
 static struct attribute *smpro_attrs[] = {
 	&sensor_dev_attr_boot_progress.dev_attr.attr,
@@ -1096,6 +1133,7 @@ static struct attribute *smpro_attrs[] = {
 	&sensor_dev_attr_errors_other_ue.dev_attr.attr,
 	&sensor_dev_attr_errors_smpro.dev_attr.attr,
 	&sensor_dev_attr_errors_pmpro.dev_attr.attr,
+	&sensor_dev_attr_acpi_power_limit.dev_attr.attr,
 
 	&sensor_dev_attr_temp1_label.dev_attr.attr,
 	&sensor_dev_attr_temp2_label.dev_attr.attr,
-- 
2.17.1

