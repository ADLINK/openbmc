From 0aaa15a797b178b8ed4d79838b097b2df1b47204 Mon Sep 17 00:00:00 2001
From: Dung Cao <dung@os.amperecomputing.com>
Date: Fri, 14 Jul 2023 15:07:00 +0700
Subject: [PATCH 4/4] Add Ampere Crash Capture manager interface

The "com.ampere.CrashCapture.Trigger" interface will provide a
dbus object that containing the type of crash capture trigger,
the Uncorrectable Error trigger, and crash information ready trigger.

busctl tree com.ampere.CrashCapture.Trigger
`-/com
  `-/com/ampere
    `-/com/ampere/crashcapture
      `-/com/ampere/crashcapture/trigger

busctl introspect com.ampere.CrashCapture.Trigger /com/ampere/crashcapture/trigger
NAME                                TYPE      SIGNATURE  RESULT/VALUE                             FLAGS
com.ampere.CrashCapture.Trigger     interface -          -                                        -
.TriggerActions                     property  s          "com.ampere.CrashCapture.Trigger.TriggerAction... emits-change writable
.TriggerUE                          property  b          false                                    emits-change writable
org.freedesktop.DBus.Introspectable interface -          -                                        -
.Introspect                         method    -          s                                        -
org.freedesktop.DBus.ObjectManager  interface -          -                                        -
.GetManagedObjects                  method    -          a{oa{sa{sv}}}                            -
.InterfacesAdded                    signal    oa{sa{sv}} -                                        -
.InterfacesRemoved                  signal    oas        -                                        -
org.freedesktop.DBus.Peer           interface -          -                                        -
.GetMachineId                       method    -          s                                        -
.Ping                               method    -          -                                        -
org.freedesktop.DBus.Properties     interface -          -                                        -
.Get                                method    ss         v                                        -
.GetAll                             method    s          a{sv}                                    -
.Set                                method    ssv        -                                        -
.PropertiesChanged                  signal    sa{sv}as   -

Signed-off-by: Dung Cao <dung@os.amperecomputing.com>
---
 .../ampere/CrashCapture/Trigger/meson.build   | 15 ++++++
 gen/com/ampere/CrashCapture/meson.build       | 16 +++++++
 gen/com/ampere/meson.build                    |  2 +
 meson.build                                   |  3 ++
 meson_options.txt                             |  1 +
 .../CrashCapture/Trigger.interface.yaml       | 47 +++++++++++++++++++
 6 files changed, 84 insertions(+)
 create mode 100644 gen/com/ampere/CrashCapture/Trigger/meson.build
 create mode 100644 gen/com/ampere/CrashCapture/meson.build
 create mode 100644 gen/com/ampere/meson.build
 create mode 100644 yaml/com/ampere/CrashCapture/Trigger.interface.yaml

diff --git a/gen/com/ampere/CrashCapture/Trigger/meson.build b/gen/com/ampere/CrashCapture/Trigger/meson.build
new file mode 100644
index 0000000..847dade
--- /dev/null
+++ b/gen/com/ampere/CrashCapture/Trigger/meson.build
@@ -0,0 +1,15 @@
+# Generated file; do not modify.
+generated_sources += custom_target(
+    'com/ampere/CrashCapture/Trigger__cpp'.underscorify(),
+    input: [ '../../../../../yaml/com/ampere/CrashCapture/Trigger.interface.yaml',  ],
+    output: [ 'common.hpp', 'server.cpp', 'server.hpp', 'client.hpp',  ],
+    depend_files: sdbusplusplus_depfiles,
+    command: [
+        sdbuspp_gen_meson_prog, '--command', 'cpp',
+        '--output', meson.current_build_dir(),
+        '--tool', sdbusplusplus_prog,
+        '--directory', meson.current_source_dir() / '../../../../../yaml',
+        'com/ampere/CrashCapture/Trigger',
+    ],
+)
+
diff --git a/gen/com/ampere/CrashCapture/meson.build b/gen/com/ampere/CrashCapture/meson.build
new file mode 100644
index 0000000..3782de6
--- /dev/null
+++ b/gen/com/ampere/CrashCapture/meson.build
@@ -0,0 +1,16 @@
+# Generated file; do not modify.
+subdir('Trigger')
+generated_others += custom_target(
+    'com/ampere/CrashCapture/Trigger__markdown'.underscorify(),
+    input: [ '../../../../yaml/com/ampere/CrashCapture/Trigger.interface.yaml',  ],
+    output: [ 'Trigger.md' ],
+    depend_files: sdbusplusplus_depfiles,
+    command: [
+        sdbuspp_gen_meson_prog, '--command', 'markdown',
+        '--output', meson.current_build_dir(),
+        '--tool', sdbusplusplus_prog,
+        '--directory', meson.current_source_dir() / '../../../../yaml',
+        'com/ampere/CrashCapture/Trigger',
+    ],
+)
+
diff --git a/gen/com/ampere/meson.build b/gen/com/ampere/meson.build
new file mode 100644
index 0000000..6c22d33
--- /dev/null
+++ b/gen/com/ampere/meson.build
@@ -0,0 +1,2 @@
+# Generated file; do not modify.
+subdir('CrashCapture')
diff --git a/meson.build b/meson.build
index be9b03a..991a4bb 100644
--- a/meson.build
+++ b/meson.build
@@ -41,6 +41,9 @@ endif
 if get_option('data_xyz_openbmc_project')
     selected_subdirs += 'xyz/openbmc_project'
 endif
+if get_option('data_com_ampere')
+    selected_subdirs += 'com/ampere'
+endif
 
 # Install the selected YAML files.
 inst_yaml_dir = get_option('datadir') / 'phosphor-dbus-yaml/yaml'
diff --git a/meson_options.txt b/meson_options.txt
index c193bbd..9d3d177 100644
--- a/meson_options.txt
+++ b/meson_options.txt
@@ -7,3 +7,4 @@ option('data_com_meta', type: 'boolean', value: true)
 option('data_org_freedesktop', type: 'boolean', value: true)
 option('data_org_open_power', type: 'boolean', value: true)
 option('data_xyz_openbmc_project', type: 'boolean', value: true)
+option('data_com_ampere', type: 'boolean', value: true)
diff --git a/yaml/com/ampere/CrashCapture/Trigger.interface.yaml b/yaml/com/ampere/CrashCapture/Trigger.interface.yaml
new file mode 100644
index 0000000..d96fc93
--- /dev/null
+++ b/yaml/com/ampere/CrashCapture/Trigger.interface.yaml
@@ -0,0 +1,47 @@
+description: 
+    Catastrophic SoC error scenarios can be caused by fatal firmware errors, 
+    hardware faults, or watchdog timer timeouts. These conditions trigger the
+    Ampere crash capture feature, which captures core and system state along 
+    with relevant error syndrome information.
+
+    The crash capture feature leverages the ACPI Boot Error Record Table (BERT)
+    to store the crash information in persistent storage before a reboot, 
+    making it available in the BERT to UEFI and the OS after the reboot
+
+properties:
+    - name: TriggerActions
+      type: enum[self.TriggerAction]
+      default: None
+      description: >
+          Defines crash capture trigger action
+
+    - name: TriggerUE
+      type: boolean
+      default: false
+      description: >
+          Define UE event is triggered or not
+      
+
+    - name: TriggerProcess
+      type: boolean
+      default: false
+      description: >
+          The crash information is ready to be read.
+
+enumerations:
+    - name: TriggerAction
+      description: >
+          Type of crash capture trigger.
+      values:
+          - name: "Bert"
+            description: >
+                Bert is triggered
+          - name: "Diagnostic"
+            description: >
+                Diagnostic is triggered
+          - name: "Done"
+            description: >
+                Bert or Diagnostic is completed processed
+          - name: "None"
+            description: >
+                No any crash capture action is triggered
-- 
2.34.1

