From aa7ebebaf2c19aac5ae8672ebb6996b5988e33e0 Mon Sep 17 00:00:00 2001
From: HuyLe <hule@amperecomputing.com>
Date: Fri, 15 Sep 2023 14:40:13 +0700
Subject: [PATCH 4/5] Display Power Supply Inventory from PowerSubsystem

Support display Power Supply inventory from PowerSubsystem, enabled by
using VUE_APP_POWERSUPPLY_DATA_FROM_POWER_SUBSYSTEM environment variable.

Change-Id: I58d3aa2f3e6c9a8639e7bfad7d7eedd068eef958
Signed-off-by: HuyLe <hule@amperecomputing.com>
---
 .../HardwareStatus/PowerSupplyStore.js        | 121 +++++++++++++-----
 1 file changed, 86 insertions(+), 35 deletions(-)

diff --git a/src/store/modules/HardwareStatus/PowerSupplyStore.js b/src/store/modules/HardwareStatus/PowerSupplyStore.js
index dc7691d..a9d7ef6 100644
--- a/src/store/modules/HardwareStatus/PowerSupplyStore.js
+++ b/src/store/modules/HardwareStatus/PowerSupplyStore.js
@@ -11,37 +11,65 @@ const PowerSupplyStore = {
   mutations: {
     setPowerSupply: (state, data) => {
       state.powerSupplies = data.map((powerSupply) => {
-        const {
-          EfficiencyPercent,
-          FirmwareVersion,
-          LocationIndicatorActive,
-          MemberId,
-          Manufacturer,
-          Model,
-          Name,
-          PartNumber,
-          PowerInputWatts,
-          SerialNumber,
-          SparePartNumber,
-          Location,
-          Status = {},
-        } = powerSupply;
-        return {
-          id: MemberId,
-          health: Status.Health,
-          partNumber: PartNumber,
-          serialNumber: SerialNumber,
-          efficiencyPercent: EfficiencyPercent,
-          firmwareVersion: FirmwareVersion,
-          identifyLed: LocationIndicatorActive,
-          manufacturer: Manufacturer,
-          model: Model,
-          powerInputWatts: PowerInputWatts,
-          name: Name,
-          sparePartNumber: SparePartNumber,
-          locationNumber: Location?.PartLocation?.ServiceLabel,
-          statusState: Status.State,
-        };
+        const PowerSubsystem =
+          process.env.VUE_APP_POWERSUPPLY_DATA_FROM_POWER_SUBSYSTEM === 'true'
+            ? true
+            : false;
+        if (PowerSubsystem) {
+          const {
+            Id,
+            Manufacturer,
+            Model,
+            Name,
+            PartNumber,
+            SerialNumber,
+            Status = {},
+            EfficiencyRatings = [],
+          } = powerSupply;
+          return {
+            id: Id,
+            health: Status.Health,
+            partNumber: PartNumber,
+            serialNumber: SerialNumber,
+            efficiencyPercent: EfficiencyRatings[0].EfficiencyPercent,
+            manufacturer: Manufacturer,
+            model: Model,
+            name: Name,
+            statusState: Status.State,
+          };
+        } else {
+          const {
+            EfficiencyPercent,
+            FirmwareVersion,
+            LocationIndicatorActive,
+            MemberId,
+            Manufacturer,
+            Model,
+            Name,
+            PartNumber,
+            PowerInputWatts,
+            SerialNumber,
+            SparePartNumber,
+            Location,
+            Status = {},
+          } = powerSupply;
+          return {
+            id: MemberId,
+            health: Status.Health,
+            partNumber: PartNumber,
+            serialNumber: SerialNumber,
+            efficiencyPercent: EfficiencyPercent,
+            firmwareVersion: FirmwareVersion,
+            identifyLed: LocationIndicatorActive,
+            manufacturer: Manufacturer,
+            model: Model,
+            powerInputWatts: PowerInputWatts,
+            name: Name,
+            sparePartNumber: SparePartNumber,
+            locationNumber: Location?.PartLocation?.ServiceLabel,
+            statusState: Status.State,
+          };
+        }
       });
     },
   },
@@ -69,10 +97,33 @@ const PowerSupplyStore = {
         .catch((error) => console.log(error));
     },
     async getChassisPower(_, id) {
-      return await api
-        .get(`${id}/Power`)
-        .then(({ data: { PowerSupplies } }) => PowerSupplies || [])
-        .catch((error) => console.log(error));
+      const PowerSubsystem =
+        process.env.VUE_APP_POWERSUPPLY_DATA_FROM_POWER_SUBSYSTEM === 'true'
+          ? true
+          : false;
+      if (PowerSubsystem) {
+        return await api
+          .get(`${id}/PowerSubsystem`)
+          .then((response) => {
+            return api.get(`${response.data.PowerSupplies['@odata.id']}`);
+          })
+          .then(({ data: { Members } }) => {
+            const promises = Members.map((member) =>
+              api.get(member['@odata.id'])
+            );
+            return api.all(promises);
+          })
+          .then((response) => {
+            const data = response.map(({ data }) => data);
+            return data;
+          })
+          .catch((error) => console.log(error));
+      } else {
+        return await api
+          .get(`${id}/Power`)
+          .then(({ data: { PowerSupplies } }) => PowerSupplies || [])
+          .catch((error) => console.log(error));
+      }
     },
   },
 };
-- 
2.34.1

