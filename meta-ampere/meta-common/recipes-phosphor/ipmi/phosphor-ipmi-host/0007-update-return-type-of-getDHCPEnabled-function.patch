From 142e6982554431d507a3fe58ed100a1b883bf43d Mon Sep 17 00:00:00 2001
From: Thang Tran <thuutran@amperecomputing.com>
Date: Tue, 20 Dec 2022 12:58:25 +0700
Subject: [PATCH] update return type of getDHCPEnabled function

In the phosphor-dbus-interfaces, the DHCPEnabled has been changed
from bool to enum type, therefore this function has to be updated.

Tested:
    1.  Request to active dhcp successfully
        $ipmitool dcmi set_conf_param activate_dhcp

Signed-off-by: Thang Tran <thuutran@amperecomputing.com>
---
 dcmihandler.cpp | 9 ++++++---
 1 file changed, 6 insertions(+), 3 deletions(-)

diff --git a/dcmihandler.cpp b/dcmihandler.cpp
index 00e06f8..a17ae60 100644
--- a/dcmihandler.cpp
+++ b/dcmihandler.cpp
@@ -15,8 +15,11 @@
 #include <sdbusplus/bus.hpp>
 #include <variant>
 #include <xyz/openbmc_project/Common/error.hpp>
+#include <xyz/openbmc_project/Network/EthernetInterface/server.hpp>
 
 using namespace phosphor::logging;
+using sdbusplus::xyz::openbmc_project::Network::server::EthernetInterface;
+
 using InternalFailure =
     sdbusplus::xyz::openbmc_project::Common::Error::InternalFailure;
 
@@ -245,7 +248,7 @@ std::string getHostName(void)
     return std::get<std::string>(value);
 }
 
-bool getDHCPEnabled()
+EthernetInterface::DHCPConf getDHCPEnabled()
 {
     sdbusplus::bus_t bus{ipmid_get_sd_bus_connection()};
 
@@ -256,7 +259,7 @@ bool getDHCPEnabled()
     auto value = ipmi::getDbusProperty(bus, service, ethernetObj.first,
                                        ethernetIntf, "DHCPEnabled");
 
-    return std::get<bool>(value);
+    return EthernetInterface::convertDHCPConfFromString(std::get<std::string>(value));
 }
 
 bool getDHCPOption(std::string prop)
@@ -1050,7 +1053,7 @@ ipmi_ret_t setDCMIConfParams(ipmi_netfn_t, ipmi_cmd_t, ipmi_request_t request,
             case dcmi::DCMIConfigParameters::ActivateDHCP:
 
                 if ((requestData->data[0] & DCMI_ACTIVATE_DHCP_MASK) &&
-                    dcmi::getDHCPEnabled())
+                    (dcmi::getDHCPEnabled() != EthernetInterface::DHCPConf::none))
                 {
                     // When these conditions are met we have to trigger DHCP
                     // protocol restart using the latest parameter settings, but
-- 
2.30.0

