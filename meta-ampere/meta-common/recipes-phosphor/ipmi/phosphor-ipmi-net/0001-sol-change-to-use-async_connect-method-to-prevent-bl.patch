From bd0ebb1d0c7a67d9eeca7964af3666af833eea0a Mon Sep 17 00:00:00 2001
From: Thang Tran <thuutran@amperecomputing.com>
Date: Sun, 30 Jun 2024 23:23:22 +0700
Subject: [PATCH] sol: change to use async_connect method to prevent blocking

Sometimes, when users request to access to host console via OOB IPMI
commands (ipmitool sol activate), the phosphor-net-ipmid can not connect
to the "obmc-console.default" socket, it made the phosphor-net-ipmid
application is blocked, therefore, others OOB IPMI commands can not be
handled by BMC.

This commit replaces "connect" method with "async_connect" method to
avoid blocking.

Tested:
   1. Force to make phosphor-net-ipmid can not connect to the
      "obmc-console.default" socket.
   2. Request another OOB IPMI command.
   3. OOB IPMI command work well.

Signed-off-by: Thang Tran <thuutran@amperecomputing.com>
---
 sol/sol_manager.cpp | 27 +++++++++++++++++----------
 sol/sol_manager.hpp |  3 +++
 2 files changed, 20 insertions(+), 10 deletions(-)

diff --git a/sol/sol_manager.cpp b/sol/sol_manager.cpp
index 76e1a15..40542fe 100644
--- a/sol/sol_manager.cpp
+++ b/sol/sol_manager.cpp
@@ -34,7 +34,7 @@ void Manager::initConsoleSocket()
     boost::asio::local::stream_protocol::endpoint ep(path);
     consoleSocket =
         std::make_unique<boost::asio::local::stream_protocol::socket>(*io);
-    consoleSocket->connect(ep);
+    consoleSocket->async_connect(ep, std::bind(&Manager::setupHostConsoleReading, this));
 }
 
 void Manager::consoleInputHandler()
@@ -86,6 +86,22 @@ int Manager::writeConsoleSocket(const std::vector<uint8_t>& input,
     return ec.value();
 }
 
+void Manager::setupHostConsoleReading()
+{
+    consoleSocket->async_wait(boost::asio::socket_base::wait_read,
+                              [this](const boost::system::error_code& ec) {
+        if (!ec)
+        {
+            consoleInputHandler();
+            setupHostConsoleReading();
+        }
+        else
+        {
+            stopHostConsole();
+        }
+    });
+}
+
 void Manager::startHostConsole()
 {
     if (!consoleSocket)
@@ -98,15 +114,6 @@ void Manager::startHostConsole()
     {
         registerSOLServiceChangeCallback();
     }
-
-    consoleSocket->async_wait(boost::asio::socket_base::wait_read,
-                              [this](const boost::system::error_code& ec) {
-        if (!ec)
-        {
-            consoleInputHandler();
-            startHostConsole();
-        }
-    });
 } // namespace sol
 
 void Manager::stopHostConsole()
diff --git a/sol/sol_manager.hpp b/sol/sol_manager.hpp
index dd857fe..6c8a6ff 100644
--- a/sol/sol_manager.hpp
+++ b/sol/sol_manager.hpp
@@ -289,6 +289,9 @@ class Manager
 
     /** @brief Handle incoming console data on the console socket */
     void consoleInputHandler();
+
+    /** @brief Setup Host console Reading*/
+    void setupHostConsoleReading();
 };
 
 /** @brief Callback method to close SOL sessions for SOL service change  */
-- 
2.25.1

