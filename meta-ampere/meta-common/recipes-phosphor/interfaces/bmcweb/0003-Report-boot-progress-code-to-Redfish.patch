From c919a9f7117825c7609fc1ecde2cbdd1cc17a48b Mon Sep 17 00:00:00 2001
From: Hieu Huynh <hieuh@os.amperecomputing.com>
Date: Tue, 20 Sep 2022 07:27:45 +0000
Subject: [PATCH] Report boot progress code to Redfish

This commit support reports the boot progress code to Redfish by
following:
- Update Laststate to OEM when receiving boot progress code command
- Add new OemLastState property to store boot progress code record
- Get the Progress.BootProgressLastUpdate D-bus then update to Redfish
BootProgress.LastStateTime.

Signed-off-by: Hieu Huynh <hieuh@os.amperecomputing.com>
---
 redfish-core/lib/systems.hpp | 72 ++++++++++++++++++++++++++++++++++++
 1 file changed, 72 insertions(+)

diff --git a/redfish-core/lib/systems.hpp b/redfish-core/lib/systems.hpp
index 975e90bc..bb1f1fe0 100644
--- a/redfish-core/lib/systems.hpp
+++ b/redfish-core/lib/systems.hpp
@@ -759,6 +759,12 @@ inline std::string dbusToRfBootProgress(const std::string& dbusBootProgress)
     {
         rfBpLastState = "OSRunning";
     }
+    else if (dbusBootProgress ==
+             "xyz.openbmc_project.State.Boot.Progress.ProgressStages."
+             "OEM")
+    {
+        rfBpLastState = "OEM";
+    }
     else
     {
         BMCWEB_LOG_DEBUG << "Unsupported D-Bus BootProgress "
@@ -855,6 +861,70 @@ inline void getBootProgress(const std::shared_ptr<bmcweb::AsyncResp>& aResp)
         });
 }
 
+/**
+ * @brief Retrieves boot progress Oem of the system
+ *
+ * @param[in] aResp  Shared pointer for generating response message.
+ *
+ * @return None.
+ */
+inline void getBootProgressOem(const std::shared_ptr<bmcweb::AsyncResp>& aResp)
+{
+    crow::connections::systemBus->async_method_call(
+        [aResp](const boost::system::error_code ec,
+                const std::variant<std::string>& bootProgressOem) {
+            if (ec)
+                return;
+
+            const std::string* bootProgressOemStr =
+                std::get_if<std::string>(&bootProgressOem);
+
+            if (!bootProgressOemStr)
+            {
+                messages::internalError(aResp->res);
+                return;
+            }
+            aResp->res.jsonValue["BootProgress"]["OemLastState"] =
+            *bootProgressOemStr;
+        },
+        "xyz.openbmc_project.State.Host", "/xyz/openbmc_project/state/host0",
+        "org.freedesktop.DBus.Properties", "Get",
+        "xyz.openbmc_project.State.Boot.Progress", "BootProgressOem");
+}
+
+/**
+ * @brief Retrieves boot progress Last Update of the system
+ *
+ * @param[in] aResp  Shared pointer for generating response message.
+ *
+ * @return None.
+ */
+inline void
+    getBootProgressLastStateTime(const std::shared_ptr<bmcweb::AsyncResp>& aResp)
+{
+    sdbusplus::asio::getProperty<uint64_t>(
+        *crow::connections::systemBus, "xyz.openbmc_project.State.Host",
+        "/xyz/openbmc_project/state/host0", "xyz.openbmc_project.State.Boot.Progress",
+        "BootProgressLastUpdate",
+        [aResp](const boost::system::error_code ec,
+                const uint64_t lastStateTime) {
+        if (ec)
+        {
+            BMCWEB_LOG_DEBUG << "D-BUS response error " << ec;
+            return;
+        }
+
+        // LastStateTime is epoch time, in milliseconds
+        // https://github.com/openbmc/phosphor-dbus-interfaces/blob/master/
+        // yaml/xyz/openbmc_project/State/Boot/Progress.interface.yaml#L11
+        uint64_t lastStateTimeStamp = lastStateTime / 1000;
+
+        // Convert to ISO 8601 standard
+        aResp->res.jsonValue["BootProgress"]["LastStateTime"] =
+            redfish::time_utils::getDateTimeUint(lastStateTimeStamp);
+        });
+}
+
 /**
  * @brief Retrieves boot override type over DBUS and fills out the response
  *
@@ -2984,6 +3054,8 @@ inline void requestRoutesSystems(App& app)
         getHostState(asyncResp);
         getBootProperties(asyncResp);
         getBootProgress(asyncResp);
+        getBootProgressOem(asyncResp);
+        getBootProgressLastStateTime(asyncResp);
         getPCIeDeviceList(asyncResp, "PCIeDevices");
         getHostWatchdogTimer(asyncResp);
         getPowerRestorePolicy(asyncResp);
-- 
2.17.1

