From 95132a20dd496c57109cc978cda85d9c80297c30 Mon Sep 17 00:00:00 2001
From: Chau Ly <chaul@amperecomputing.com>
Date: Mon, 10 Jul 2023 16:34:42 +0700
Subject: [PATCH 08/12] Disable patching to IPv4Address when DHCP is enabled

In accordance with schema http://redfish.dmtf.org/schemas/v1/
IPAddresses.json#/definitions/IPv4Address, some items in "IPv4Address"
schema should be read-only when DHCPv4 is enabled in the interface. This
commit disables patching to those items (Address, Gateway, SubnetMask)
when the "DHCPEnabled" property in "DHCPv4" is true. This also affects
when passing "DHCPEnabled" with true value together with "IPv4Address"
items in the same redfish patch command. "IPv4StaticAddresses"
implements the "IPv4Address" schema and is patch-able so should follow
the rule.

Tested:
When "DHCPEnabled" is true, patching to Address, Gateway or SubnetMask of
"IPv4Address" results in PropertyNotWritable error message.

Signed-off-by: Chau Ly <chaul@amperecomputing.com>
---
 redfish-core/lib/ethernet.hpp | 28 +++++++++++++++++++++++++---
 1 file changed, 25 insertions(+), 3 deletions(-)

diff --git a/redfish-core/lib/ethernet.hpp b/redfish-core/lib/ethernet.hpp
index 8cbea2cd..e20fb136 100644
--- a/redfish-core/lib/ethernet.hpp
+++ b/redfish-core/lib/ethernet.hpp
@@ -2270,11 +2270,33 @@ inline void requestEthernetInterfacesRoutes(App& app)
             {
                 handleMACAddressPatch(ifaceId, *macAddress, asyncResp);
             }
-
             if (ipv4StaticAddresses)
             {
-                handleIPv4StaticPatch(ifaceId, *ipv4StaticAddresses, ipv4Data,
-                                      asyncResp);
+                bool nextv4DHCPState = translateDhcpEnabledToBool(ethData.dhcpEnabled, true);
+                if (v4dhcpParms.dhcpv4Enabled)
+                {
+                    // If DHCPEnabled for IPv4 is also passed into the patch command,
+                    // take it into account
+                    nextv4DHCPState = *v4dhcpParms.dhcpv4Enabled;
+                }
+                if (nextv4DHCPState)
+                {
+                    // Avoid patching to IPv4StaticAddresses when is DHCPEnabled is true for IPv4
+                    messages::propertyNotWritable(asyncResp->res,
+                                              "IPv4StaticAddresses");
+                }
+                else
+                {
+                    // TODO(ed) for some reason the capture of
+                    // ipv4Addresses above is returning a const value,
+                    // not a non-const value. This doesn't really work
+                    // for us, as we need to be able to efficiently move
+                    // out the intermedia nlohmann::json objects. This
+                    // makes a copy of the structure, and operates on
+                    // that, but could be done more efficiently
+                    handleIPv4StaticPatch(ifaceId, *ipv4StaticAddresses, ipv4Data,
+                                          asyncResp);
+                }
             }
 
             if (staticNameServers)
-- 
2.34.1

